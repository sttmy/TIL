# -*- coding: utf-8 -*-
"""230502 Jango4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oFATqHu6PoWJr05LL5d7vSnd0tjlTjwN

3-10 views.py 파일 분리
~ 3-14 검색

https://wikidocs.net/71806
"""

GET, POST 차이점


https://velog.io/@magnoliarfsit/ReDjango-3.-GET-POST-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%B0%A8%EC%9D%B4%EC%A0%90-%EB%B0%8F-api-%EC%84%A4%EA%B3%84

"""3-15 추가기능

답변 페이징 정렬

https://github.com/pahkey/djangobook/commit/1c4a1cbebefe9f2ba165e100264cc00397218758

4-01 깃
"""

# 파이보에 깃 적용하기
(cmd창)

mysite
git init
dir

# 올리면 안되는 파일들이 있음 (gitignore)
.idea        # 사용자 설정, 파이참전용 파일, 사용자별로 달라짐
db.sqlite3   # SQLite의 데이터베이스 파일, 시스템별로 달라짐
*.pyc        # 컴파일된 파이썬파일
__pycache__  # 컴파일된 파이썬파일


(mysite폴더)
git bash
vim .gitignore

.idea       
db.sqlite3  
*.pyc       
__pycache__

입력 후 ESC 키 누르기
:wq 눌러서 종료   #저장 후 나가기

ls  # 파일 확인

git status 
git add *    # 전체선택

# 아래 warning 무시
warning: in the working copy of 'static/bootstrap.min.css', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'static/bootstrap.min.js', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'static/jquery-3.4.1.min.js', LF will be replaced by CRLF the next time Git touches it

git status 

git commit -m 'first_pybo_commit'

git log

"""4-02 깃허브"""

깃허브에서 
repository 'pybo' 만들고
# 주소 연결
(cmd창)
mysite
git remote add origin https://github.com/sttmy/pybo.git
git push origin master

"""4-03 서버"""

아마존AWS
https://lightsail.aws.amazon.com/ls/webapp/home/instances 

# 깃이랑 연결
git clone https://github.com/pahkey/pybo.git mysite

https://wikidocs.net/75559

"""Public static IP address

13.209.186.172
"""

sudo ln -f  /usr/share/zoneinfo/Asia/Seoul  /etc/localtime

date

python3

>>>exit()

$ sudo apt update
$ sudo apt install python3-venv
:~$ --> /home/ubuntu/c:/project/
:~$ --> /home/ubuntu/c:/vevns

# 잘안될 때 killall
(mysite) ~~~~~~ projects/mysite$ killall python3

# 다시
(Amazon lightsail)
고정IP: 13.209.186.172  # 집주소. 문이 없음
# 방화벽 Firewall 
Add rule : TCP 8000 # 문을 하나 만들어줌. 사용자가 왔다갔다하는 문

(pycharm)
(settings.py)
ALLOWED_HOSTS = ['13.209.186.172']   #<--- 고정IP넣어줌

git add .
git commit -m 'add'
git push origin master

(lightsail)

cd venvs
cd mysite
cd bin
. activate  # 가상환경 접속
cd ~/projects
cd mysite
git pull    # push한 파일 pull로 가져옴
python3 manage.py runserver 0:8000    # 0은 IP를 개방한다는 뜻, 8000 문으로

git clone   #복사해서 가져옴
git config --global -- add safe.directoory C:projects/mysite
git add .
git list
git --list

"""4-08 settings.py 분리"""

(pycharm)

(config > settings) 폴더 생성
settings.py 파일을 settings폴더로 가져옴
settings.py 파일을 base.py 로 이름변경

(config > settings > base.py)
BASE_DIR = Path(__file__).resolve().parent.parent.parent   #<---- .parent 추가

(config > settings > local.py) 생성
from .base import *

ALLOWED_HOSTS = []

(config > settings > prod.py) 생성
from .base import *

ALLOWED_HOSTS = ['13.209.186.172']


(cmd)   # 로컬에서 서버 구동
mysite
python manage.py runserver 

# 오류발생: The SECRET_KEY setting must not be empty.

(cmd)
python manage.py runserver --settings=config.settings.local  
# --settings 옵션은 장고 서버가 읽어야 할 설정파일을 지정하는 옵션임. 
# config > settings > local.py파일을 읽으라는 뜻

# 로컬 설정 자동화
# 매번 runserver 세팅하지 않고 

(로컬 C드라이브 > venvs)
mysite.cmd 파일을 메모장으로 실행 (.txt로 바꿈)

@echo off
cd c:/projects/mysite
set DJANGO_SETTINGS_MODULE=config.settings.local    #<------- 삽입
c:/venvs/mysite/scripts/activate

mysite.txt파일을 다시 mysite.cmd로 변경

(cmd) 다시 켜기
mysite
python manage.py runserver 

(chrome) 127.0.0.1:8000/pybo 확인

#수정사항을 git에 업로드

(mysite > git bash)

git add .
git commit -m 'setting_change'
git push origin master

# server로 와서 바뀐 부분 당겨오기

(lightsail)
cd venvs
cd mysite
cd bin
. activate  # 가상환경 접속
cd ~/projects
cd mysite
git pull    # push한 파일 pull로 가져옴


# 로컬의 mysite.cmd라는 단축 파일이랑 같은 파일을 서버에 만들기
cd ~
cd venvs
nano mysite.sh
# 새로운 문서편집기가 뜸
/*  내용  */
#!/bin/bash

cd ~/projects/mysite
export DJANGO_SETTINGS_MODULE=config.settings.prod
. ~/venvs/mysite/bin/activate

ctrl+O
ctrl+C
ctrl+X
Y
(enter)

. mysite.sh
python manage.py runserver 0:8000
(chrome) 13.209.186.172:8000 확인

"""4-06 서버접속 프로그램"""

# 서버

(AWS)
account > account > SSH keys
Key 다운로드 : LightsailDefaultKey-ap-northeast-2.pem파일임

# 서버에 접속해서 터미널을 열어주는 프로그램
MobaXterm 설치 주소: https://mobaxterm.mobatek.net/download.html
free버전 다운로드

install, 실행

(MobaXterm)
session
SSH 
서버의 고정 IP 주소 입력 13.209.186.172
specify username 체크, ubuntu 입력
advanced SSH settings
use private key 체크, 로컬 컴퓨터에 있는 프라이빗 키 파일(mysite.pem) 선택
<OK>
accept

# 이제 MobaXterm만 껐다 켜면 서버 실행


# mysite.sh 파일: 로컬의 환경변수와 유사하게 우분투에서 사용

AWS 삭제! (3개월 무료 from 23/5/2)
# instance가 아니라 고정IP를 삭제해야 함
https://wikidocs.net/164359

https://m.blog.naver.com/zxwnstn/221521038431